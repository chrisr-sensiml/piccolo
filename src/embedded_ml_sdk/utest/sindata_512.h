/*
Copyright 2017-2024 SensiML Corporation

This file is part of SensiML™ Piccolo AI™.

SensiML Piccolo AI is free software: you can redistribute it and/or
modify it under the terms of the GNU Affero General Public License
as published by the Free Software Foundation, either version 3 of
the License, or (at your option) any later version.

SensiML Piccolo AI is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public
License along with SensiML Piccolo AI. If not, see <https://www.gnu.org/licenses/>.
*/


//
/* Sin data 512 length fs=4

python code to generate data
number_of_samples =512
add_noise = False
x = np.arange(number_of_samples)
T = 128
y = np.sin(x*(2*np.pi)/T)*1000
if add_noise:
    y += np.random.random_sample(size=number_of_samples)*1000
    
count = 0
for i in y:
    
    if count%15==0:
        print '{},\n'.format(int(i)),
    else:
        print '{},'.format(int(i)),
    count+=1


*/
static int16_t sindata_512[512] = \
{
0, 49, 98, 146, 195, 242, 290, 336, 382, 427, 471, 514, 555, 595, 634, 671,
707, 740, 773, 803, 831, 857, 881, 903, 923, 941, 956, 970, 980, 989, 995,
998, 1000, 998, 995, 989, 980, 970, 956, 941, 923, 903, 881, 857, 831, 803,
773, 740, 707, 671, 634, 595, 555, 514, 471, 427, 382, 336, 290, 242, 195,
146, 98, 49, 0, -49, -98, -146, -195, -242, -290, -336, -382, -427, -471, -514,
-555, -595, -634, -671, -707, -740, -773, -803, -831, -857, -881, -903, -923, -941, -956,
-970, -980, -989, -995, -998, -1000, -998, -995, -989, -980, -970, -956, -941, -923, -903,
-881, -857, -831, -803, -773, -740, -707, -671, -634, -595, -555, -514, -471, -427, -382,
-336, -290, -242, -195, -146, -98, -49, 0, 49, 98, 146, 195, 242, 290, 336,
382, 427, 471, 514, 555, 595, 634, 671, 707, 740, 773, 803, 831, 857, 881,
903, 923, 941, 956, 970, 980, 989, 995, 998, 1000, 998, 995, 989, 980, 970,
956, 941, 923, 903, 881, 857, 831, 803, 773, 740, 707, 671, 634, 595, 555,
514, 471, 427, 382, 336, 290, 242, 195, 146, 98, 49, 0, -49, -98, -146,
-195, -242, -290, -336, -382, -427, -471, -514, -555, -595, -634, -671, -707, -740, -773,
-803, -831, -857, -881, -903, -923, -941, -956, -970, -980, -989, -995, -998, -1000, -998,
-995, -989, -980, -970, -956, -941, -923, -903, -881, -857, -831, -803, -773, -740, -707,
-671, -634, -595, -555, -514, -471, -427, -382, -336, -290, -242, -195, -146, -98, -49,
0, 49, 98, 146, 195, 242, 290, 336, 382, 427, 471, 514, 555, 595, 634,
671, 707, 740, 773, 803, 831, 857, 881, 903, 923, 941, 956, 970, 980, 989,
995, 998, 1000, 998, 995, 989, 980, 970, 956, 941, 923, 903, 881, 857, 831,
803, 773, 740, 707, 671, 634, 595, 555, 514, 471, 427, 382, 336, 290, 242,
195, 146, 98, 49, 0, -49, -98, -146, -195, -242, -290, -336, -382, -427, -471,
-514, -555, -595, -634, -671, -707, -740, -773, -803, -831, -857, -881, -903, -923, -941,
-956, -970, -980, -989, -995, -998, -1000, -998, -995, -989, -980, -970, -956, -941, -923,
-903, -881, -857, -831, -803, -773, -740, -707, -671, -634, -595, -555, -514, -471, -427,
-382, -336, -290, -242, -195, -146, -98, -49, 0, 49, 98, 146, 195, 242, 290,
336, 382, 427, 471, 514, 555, 595, 634, 671, 707, 740, 773, 803, 831, 857,
881, 903, 923, 941, 956, 970, 980, 989, 995, 998, 1000, 998, 995, 989, 980,
970, 956, 941, 923, 903, 881, 857, 831, 803, 773, 740, 707, 671, 634, 595,
555, 514, 471, 427, 382, 336, 290, 242, 195, 146, 98, 49, 0, -49, -98,
-146, -195, -242, -290, -336, -382, -427, -471, -514, -555, -595, -634, -671, -707, -740,
-773, -803, -831, -857, -881, -903, -923, -941, -956, -970, -980, -989, -995, -998, -1000,
-998, -995, -989, -980, -970, -956, -941, -923, -903, -881, -857, -831, -803, -773, -740,
-707, -671, -634, -595, -555, -514, -471, -427, -382, -336, -290, -242, -195, -146, -98, -49
};
