"""
Copyright 2017-2024 SensiML Corporation

This file is part of SensiML™ Piccolo AI™.

SensiML Piccolo AI is free software: you can redistribute it and/or
modify it under the terms of the GNU Affero General Public License
as published by the Free Software Foundation, either version 3 of
the License, or (at your option) any later version.

SensiML Piccolo AI is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public
License along with SensiML Piccolo AI. If not, see <https://www.gnu.org/licenses/>.
"""

import numpy as np
import pytest
from engine.drivers import (
    generate_features,
    segment_function_caller,
)
from library.core_functions.feature_generators.fg_frequency import (
    fg_frequency_mfcc,
    fg_frequency_mfcc_contracts,
)
from library.core_functions.segmenters.sg_general_threshold import (
    general_threshold_contracts,
)


from library.models import Transform
from library.tests.core_functions.segmenters.test_general_threshold_segmenter import (
    build_test_data,
)
from numpy import array, int16


# fmt: off
input_data = [{'data': array([[ -15,   -6,  -15,  -24,   -9,   -3,    3,   10,    5,  -12,  -16,
            -7,  -14,  -13,  -15,  -19,  -22,  -14,   -5,  -14,  -23,  -23,
            -7,   10,   17,    8,    1,   -5,  -25,  -13,   -7,   -2,    2,
             9,  -12,  -20,   -5,  -31,  -19,    3,    9,    0,   13,    0,
           -27,   -6,    7,  -18,  -18,    0,  -16,  -14,   -4,  -16,  -15,
           -18,  -19,   21,   31,   16,   21,    4,   11,   -7,  -13,   -7,
             4,   -1,  -91, -186, -200,  -97,  296,  480,  273,  -70, -569,
          -884, -634,  636, 1412,  575, -380, -199, -758, -498,   37,  113,
           427,  206,  392,   30,  -60, -409, -441,   52,   91,  383,  398,
           131, -154, -336, -217, -232,   42,  311,  358,  166,   -3, -138,
          -423,  -81,  159,  143,  209,  336,  -85, -422, -269,  -91,   57,
           167,  179,   88,   94,  -38, -138, -238,  -55,   66,   76,   66,
            87,   63, -137, -228, -232,  -66,  144,  246,  289,  182, -155,
          -388, -276, -100,  160,  309,  260,   71, -112, -190, -204,  -82,
           101,  164,  132,   65,  -45, -180, -135,    8,   90,   76,   87,
           -24, -114,  -26,    5,   26,   41,   45,  -36, -100,  -41,   38,
            87,  114,   80,  -35, -107,  -75,  -38,   27,   89,   71,    3,
           -24,  -23,  -17,   16,   32,   28,   31,   22,  -20,  -35,   -5,
             6,    0,   -2,    3,  -15,  -20,  -12,   14,   55,   80,   33,
           -17,  -16,   -6,  -13,  -10,   14,   -2,  -42,    9,   50,   44,
            29,    0,  -30,  -43,   -8,    8,   38,   55,   27,  -15,  -17,
           -11,  -20,  -10,   12,   28,   46,   27,  -11,  -31,  -36,  -26,
           -13,    4,   13,    7,   11,   -7,  -36,  -41,  -37,  -12,    8,
            43,   49,   16,  -10,  -49,  -60,  -35,   23,   50,   46,   45,
             8,  -38,  -46,  -20,   -4,   13,   49,   43,   16,   -8,  -31,
           -28,  -24,   -2,    1,    8,    6,   -7,  -15,  -15,   -2,   -9,
            -5,   10,   15,   -6,  -25,  -33,  -26,   -8,    2,   13,   19,
            15,   -7,  -17,  -11,   -7,   10,   37,   36,    6,  -20,  -15,
            -9,  -11,  -19,    7,   36,   35,   22,   -8,  -14,  -13,  -15,
             0,   25,   26,    6,    3,   -4,  -14,   -4,    0,    8,   17,
            18,    2,   -5,   10,    4,    6,   25,   34,   24,   15,    2,
           -10,  -11,    0,   17,   29,   27,   14,    6,    2,    0,   -5,
             4,    4,    7,    6,   -2,   -7,  -11,   -7,   -4,   -7,    3,
             5,    0,    1,    3,    0,    0,    7,   -7,  -14,   -3,    5,
             6,    2,   -1,   -5,   -1,    6,    5,   11,   11,    0,   -4,
           -12,  -13,   -4,    4,    0,   -4,   -6,  -15,  -13,   -9,   -6,
            -3,   -8,  -13,   -9]], dtype=int16),
  'columns': ['channel_0'],
  'metadata': {'segment_uuid': '25e4efd8-34c9-4be6-a825-73c4e7f13657',
   'Labels': 'key_io',
   'SegmentID': 13}},
 {'data': array([[ -9, -12,  -3,   7,   3, -10, -18, -23, -31, -39, -34, -16,  -5,
            4,   9,   5, -25, -54, -52, -49, -13,  55,  72,  10, -37, -50,
          -54, -27,   8,  35,  57,  17, -36, -44, -29,   0,  27,  22, -15,
          -20,   1,  10, -12, -35, -21,  -8,   9,  29,   4, -29, -23,  -2,
            5,   6,   1,  13,  19, -10, -30, -18,  -8,  -3,   7,  14,  19,
           23,  17,  -8, -23,  -9,  11,  27,  27,  12,  -5, -15,  -8,   3,
            7,   9,  15,  15,   9, -11, -21,  -4,   4,   9,  14,  12,   2,
           -2,  -8, -10,  -8,   4,  14,  18,  14,  -7, -18,  -9,   6,  10,
           10,  11,   5,   0,  -3,   0,   9,   9,   5,   3,   7,   8,   2,
            1,   0,   0,  -5,  -5,  -1,  -6,  -6, -15, -17,  -9, -12, -11,
          -18, -17, -10,   1,   0, -15, -13, -14,  -7,   0,   2,   2,  -5,
          -10,  -5,   8,   6,   4,   9,   6,  -2,  -3,  -5,  -6,   2,  12,
           10,   4,  -4,  -1,   5,   8,  14,  10,  -3,  -6,   4,   8,   8,
            7,   6,   0,   3,  -1,  -1,   7,  12,  14,   8,   0,   0,   0,
            2,   5,  12,  11,   1,   0,   2,   1,  11,  15,  13,  12,  13,
            9,   3,   7,  13,  17,  18,  18,  12,   0,   1,   6,  14,  18,
           15,  11,   7,  10,   5,   6,   6,   4,  15,  14,   2,   1,  11,
            9,   4,   8,   1,   2,  10,  12,  10,   3,   2,   2,   1,   1,
           -2,   1,   0,   4,   7,   6,  -2,  -5,   0,   3,   0,  -3, -15,
          -10,  -4,  -3,  -9,  -5,  -4,  -5,  -6,  -8,  -9, -13, -14,  -6,
            2,   0, -13, -14, -17, -12,  -3,   1,   4,  -5, -10,   2,   5,
            0,  17,  28,  -4, -19, -41, -18,   1, -19, -10,  29,  19,  -1,
          -20,  -9,  12,  12,  -9,   0,   7,  -5,  14,  -8, -52, -44, -29,
           -8,   4,  16,  11,   7,   7,   4,  -2, -27, -30, -11,  23,  17,
            0,  11,  11,  -9, -10,   0,  -7,   3,  23,  12,   6,  13,   9,
            0,  11,  16,  18,   0,  -6,  -2,  -3,  -8,   0,   8,   5,  16,
           19,  16,   5, -22, -16,  13,  19,  15,  55,  69, -14, -75, -40,
          -34, -25,  53,  57,  55,  10, -25, -44, -31,  -1,   0,  16,   0,
          -11,  -7, -25, -16,   5,  23,   7, -14,  -1,  -3,   3, -10, -10,
          -12, -14, -19, -31, -23, -12,  -7, -20,   0,  12,  13,   6,  -7,
          -21, -20, -18, -12,   0,   5,   7,   0,  -5,  -5]], dtype=int16),
  'columns': ['channel_0'],
  'metadata': {'segment_uuid': '25e4efd8-34c9-4be6-a825-73c4e7f13657',
   'Labels': 'key_io',
   'SegmentID': 14}},
 {'data': array([[   -6,    -7,    -4,    -8,   -15,   -24,   -30,   -17,     1,
             -3,   -11,    -2,   -12,   -33,   -24,    -6,     0,    -4,
            -11,   -18,   -16,   -10,    -9,    -4,     0,    -1,    -9,
              0,     1,    -9,    -7,    -2,    -4,    -2,     5,     2,
              6,     6,     4,     0,    -1,     0,     3,     2,     3,
              2,    -1,    -3,     0,     3,     5,    15,    18,    15,
              5,    -6,   -11,    -3,     3,     4,     3,     0,    -7,
             -4,     0,     7,     9,     7,     5,     5,     8,     7,
              6,     4,     1,     0,     0,     5,    15,    12,     6,
             15,    17,     6,     8,     3,     3,     6,     4,     1,
             -1,     0,     3,     7,    12,     6,     1,     0,     2,
             -1,    -4,     0,     1,     6,     2,    -2,    -2,     2,
              1,    -3,     1,     3,     4,     4,     4,     9,     7,
              0,     0,     5,    -1,    -5,     5,     2,    -6,   -11,
             -4,    -2,     1,     0,     0,     0,    -5,   -10,    -7,
             -3,    -3,     1,     2,    -1,   -10,   -13,    -4,     0,
              2,     4,     2,     0,     3,     1,    -5,    -2,     0,
              0,     1,     3,     7,     7,     6,     2,     8,     8,
              7,     5,     0,     0,     6,    13,     2,     2,    20,
              8,    -8,    -3,     8,     4,    12,    22,     9,     7,
             14,   -10,    -7,    12,     2,   -10,     9,    19,     8,
              0,     1,    -2,    -7,    -3,    12,    15,    17,    16,
             12,    -6,     3,    -1,     0,     8,    10,     2,     0,
             -1,   -12,   -14,   -22,   -36,   -47,   -52,   -35,   -25,
            -26,  -112,  -196,  -155,  -141,   -40,  -130,  -464,  -151,
             61,   -42,   649,   990,  -369, -1397,  -970,  -192,   623,
            918,  1599,   392, -2202, -2083,  -800,   175,  2199,  2299,
          -1473,  -858,   796, -1011,   748,   948, -1074,   938,   962,
          -2064,   -57,  1128,  -639,  -252,  1117,  -241,  1657,   655,
          -2193, -2624,   888,  1983,  1920,   270,  -278, -1400,  -869,
           -788,  1260,  1913,  -715, -1915,  -369,  1633,  1430,  2007,
          -1343, -2488,  1399,    82, -3510,  2163,  5111,   907, -2133,
          -3033, -3589,  3251,   785, -1584,  3865,  1504, -2253, -2314,
           -473,  1026,  2412,   316,  -302, -1454,  -470,  -575,  -470,
           2798,  2966, -1835, -3302,  -285,   234,   599,  1211,  1096,
           -164,  -398, -2905, -2012,  1720,  5478,  3571, -7472, -7878,
           4917,  6070,  -651,  -936, -3901,  4198,   961, -5913, -3847,
           3978,  4888, -3011,  3709,  1510, -1060,  -911, -6400, -4712,
           5619,  6519, -1060,  -273,  3908, -4893, -4799, -3761,  1546,
           4517,  8399,  1234, -5193, -2111,  1738, -8948, -4591,  7538,
           8864,  2341, -2404, -6463, -4722,  4212,  -817, -2565,  4542,
           5892, -1022, -2735, -2673, -2938,    25,   689,  -983,  4428,
           2620,   -97, -2761,  -607,  -280, -2143, -2282,  2380,  5800,
            319, -1318, -2410, -2516, -1012,  1111, -1900,  2737,  4450,
            210, -3597, -2600, -1882]], dtype=int16),
  'columns': ['channel_0'],
  'metadata': {'segment_uuid': '25e4efd8-34c9-4be6-a825-73c4e7f13657',
   'Labels': 'key_io',
   'SegmentID': 15}},
 {'data': array([[  492,  1010,  2188,  2613,  -857, -2544, -1789,  -375,   688,
            626, -1163,  1550,  1444,  -556, -2938,  -350,   922,  1176,
           1581,  -618,  -822,  -424, -1410,  -289,   724,   430,  1318,
            168, -1143,  -748,  -892,  -945,  1197,   828,   356,  1318,
             90, -1689,    43,  -605,  -538,  1053,  1608,  -329, -1541,
           -231,    53,   197,   430,   171, -1055,   -48,  1973,   839,
          -1493, -1154,   -66,   -73,   721,   427,  -147,   777,   250,
          -1294,  -719,  -570,    23,  1953,  1105,   -51,  -497,  -696,
          -1017,  -334,   711,   706,   950,   716,  -145, -1058, -1258,
           -235,   227,  1182,  1414,   220, -1234,  -550,   138,  -844,
           -411,   929,  1139,   626,   -91, -1174,  -796,   -83,   630,
           -120,   385,   765,  -538,  -617,   216,  -183,   -52,   325,
            692,   228,  -128,   178,  -405,  -303,   -63,    -1,  -239,
            511,   517,   105,   498,   115,  -943, -1175,   440,   631,
            341,   703,   230,  -384, -1312,  -449,    49,   353,  1018,
            405,  -100,  -608,  -270,  -587,  -315,  1198,   668,    92,
           -121,  -156, -1189,  -117,   365,   840,   727,   476,  -430,
           -483,  -972,   245,   494,   798,    52, -1003,   679,  1434,
            166, -1170,  -835,   254,   538,   171,   585,  -269,   -27,
           -339,  -525,   400,   584,   523,   -67,   744,   322, -1490,
           -899,  -164,  1380,  1667,   943,  -711, -1903, -1166,    49,
            483,   823,  1587,   962,  -608, -1003,  -804,   203,  -283,
          -1059,   965,  2848,  -215, -1215, -1165,  -230,   785,  -473,
           -738,   741,  1480,   540, -1175,  -614,   504,  -961,  -814,
           1715,   792, -1368,  1246,  -608, -2756,  1313,  2219,  -909,
            570,   -19, -1396,  -601,   298,   995,  1522,  -130, -2783,
          -2410,  2985,  3921, -1125, -4281, -2792, -1282,  6238,  9463,
          -7086, -6636,  9463, -6461, -7772,  9254, -3752,  4459,  2698,
          -1608, -4645,   373,  1245, -7971,  7440,  3354,  -104,  1159,
          -1428, -3038, -2963,  2856,  -592,  -131,  3086, -1339,    61,
            573,  -373, -2332,   883,   345, -1109,  1694,  2328, -1346,
          -4206,  1533,   357,    65,   213,    34,   228,  -237,    21,
          -2104,   170,  2362, -1138, -2139,   992,  5338,  -249, -6100,
           1437,  1270, -3331,  1384,   814,  1212,  2099,  -973, -3733,
            266,  2897, -3400,  -281,  2607,  1435,  1225, -1050, -2916,
          -2239,   626,  1620,  1274,  2504, -1915,  -413, -1572, -2555,
            118,  1562,  4387,     2, -2467,  -267,  -584, -2189,  -434,
           2491,  2098, -1106,  -122,   -92,  -780,   174,  -172,  -220,
            944,  -378,   940,  -543,   223, -1681,  -636,  2614,  1055,
           -496, -2771,  1202,   432,  -345,   103,    98,   437,   302,
          -2283,   987,  1249,   310, -2102,    29,  1617, -1062,   176,
            109,   554,   805,  -749,  -793,  -370,   338,   581,  -295,
            -89,  -233,   815,  -311,     7,  -516,  -120,   804,   373,
           -105,  -301,   -17,   -92,  -549,   344,  -522,  1324,   -32,
           -764,  -750,   787,   -36]], dtype=int16),
  'columns': ['channel_0'],
  'metadata': {'segment_uuid': '25e4efd8-34c9-4be6-a825-73c4e7f13657',
   'Labels': 'key_io',
   'SegmentID': 16}},
 {'data': array([[ -111,  -118,   962,   189, -1309,  -626,   958,   467,  -342,
            566,  1004,  -252,  -965,  -744,   -58,  1063,    55,  -291,
            106,   236, -1144,  -864,   438,   693,   -29,   538,   692,
           -598,  -964,  -554,  -390,    84,  1061,   339,   -77,  -475,
           -805,  -218,   540,   709,    11,   678,   637,    -4, -1223,
           -876,  -422,  1325,  1373,   375,  -414,  -870, -1217,  -622,
            813,   678,   785,    54,  -298,   591,  -145, -1555,  -251,
           1181,   189,   194,   563,   368,  -131, -1007, -1245,    63,
            603,   471,  1003,   702,  -529, -1012,  -275,   300,   218,
           -253,   584,   -58,  -295,    97,   -63,  -502,  -116,   683,
            433,   -43,  -297,   219,   596,  -256,  -407,   -52,    83,
            113,    18,    30,   233,  -176,  -428,   161,   503,   145,
             -2,   -14,  -162,  -294,  -145,   -83,   220,   316,    15,
             74,  -166,  -208,    60,   -36,   -80,   107,   166,  -142,
            -57,    27,   -58,   109,    77,   -13,    19,    60,  -228,
            -52,   443,   169,  -237,  -334,   275,    41,   -93,   423,
            144,     7,   107,  -203,  -271,   239,   353,  -195,   -90,
            249,     0,  -289,    57,   239,    13,   -64,  -130,  -137,
            181,    61,  -231,   129,   224,  -335,  -107,   169,    97,
            -45,    58,   179,   110,  -118,  -335,  -125,   159,     6,
            -74,   -76,  -178,    69,   163,   -32,   177,   211,    54,
            -85,   -21,  -428,  -134,   -65,   434,    45,   294,  -152,
           -464,   -36,     4,   460,   153,   147,    60,   -18,    -3,
           -253,  -130,  -261,   354,   181,    19,   198,    36,  -216,
           -472,   185,    58,   321,  -206,    92,   325,   186,  -156,
           -213,   211,  -697,  -309,   483,   880,  -116,  -540,  -221,
             15,   225,  -139,  -139,   385,   531,  -840,  -513,   235,
            928,   194,  -631,  -727,  -227,  -355,   239,   501,   295,
             44,   -11,  -509,  -439,  -511,   557,   517,   506,  -101,
          -1019, -1982,   125,  4190,   563, -2820,  -378,   810, -1208,
            709,  -697,   496,  1411,  -345, -1039,  -585,   783,  -968,
             46,   962,   304,  -149,  -990,     8,   485,   847,  -463,
          -1410,   392,   555,   636,  -319, -1178,   172,   480,   279,
          -1401,   281,  1793,  -538, -1024,  -227,   839,   336,  -992,
           -476,    78,   991,  -224,  -455,   -89,    40,   469,  -724,
           -625,   554,   800,    81,  -588,   318,  -195,  -412,  -483,
            275,   917,   377,  -260,  -628,  -298,    43,   163,   138,
            125,   283,    64,  -468,  -296,   -51,   321,    35,   -82,
            194,  -283,   -74,   117,    10,  -171,    77,    72,  -271,
             99,   223,   -92,    63,   112,  -141,  -418,  -247,   320,
            498,   -17,  -233,   -82,  -314,  -208,    80,   248,   346,
           -188,  -157,   474,  -157, -1089,   384,  1023,   -46,  -574,
            145,   119,   -63,    19,   365,  -151, -1126,   199,  -125,
            514,   978,  -252, -1222,   304,  1212,  -515,  -272,  -469,
            222,  1427,  -544, -1219]], dtype=int16),
  'columns': ['channel_0'],
  'metadata': {'segment_uuid': '25e4efd8-34c9-4be6-a825-73c4e7f13657',
   'Labels': 'key_io',
   'SegmentID': 17}},
 {'data': array([[  961,   -75, -1877,   442,  1925,   574, -1086,   -22,   203,
            377,  -222,  -408,   215,   737,   172,  -229,  -402,  -187,
           -198,   908,   123,  -672,  -135,   935,  -159,  -549,    52,
            868,  -103,  -549,  -187,   532,   429,  -926,   183,  1062,
           -431,  -604,  -229,   373,   543,   618,  -944,    90,  1055,
            -95, -1296,  -662,  1091,   638,  -430,  -816,  1435,   695,
           -460, -1418,  -106,   257,   515,   320,   583,   656,  -745,
          -1145,  -154,   686,    68,   -64,   735,   -18,  -229,  -245,
           -366,     5,   328,   436,  -221,   137,  -119,    71,  -234,
            125,  -317,   113,   619,   -50,  -569,    83,   637,  -275,
           -465,   -62,    80,   443,   250,   -63,  -313,   -33,  -248,
           -192,   172,   710,   360,  -621,  -292,   -11,  -107,    72,
            263,   468,    98,  -705,  -305,   330,   810,  -817,  -481,
            661,   627,  -449,  -432,   389,   294,  -303,  -124,   137,
             40,  -263,  -141,    81,   425,  -113,  -166,  -226,  -115,
            101,    14,    11,   -48,    -5,   -96,    16,  -200,  -173,
             98,   201,  -129,  -200,   -54,   181,   -83,  -224,   -34,
            167,  -114,  -185,    68,   180,    15,  -255,  -151,   147,
            153,   -13,  -239,  -138,    24,   215,   115,    83,   168,
           -171,  -443,  -126,   271,   280,  -207,  -315,    46,   277,
             40,   -63,    57,  -136,  -214,   -90,   229,   363,    57,
           -247,  -298,   -49,    46,   -50,    -8,   154,   160,   -79,
            -30,   -47,  -113,  -142,    30,   194,   142,    10,  -293,
           -245,     0,   157,    85,    66,    38,   -73,   -46,   -96,
            -21,    45,    32,   -33,   -50,    12,     9,    67,    98,
              2,  -122,  -127,    28,    56,    49,    80,    85,   -51,
           -153,   -86,   -84,   -17,    81,    82,     8,     1,     5,
           -119,   -91,   -68,   -53,    10,   152,    94,   -67,   -34,
           -136,  -178,   -52,    37,   106,   150,   117,   -42,  -161,
           -100,   -78,   -11,   100,   158,   101,    14,   -57,  -123,
            -85,    21,   109,    76,   -28,   -38,   -92,   -63,     2,
             22,    34,    10,    18,   -51,   -19,    44,    41,    33,
            -34,   -70,   -58,    50,    96,    59,    21,   -41,   -34,
             -3,     3,    44,    76,    56,    -5,   -47,   -14,   -11,
             12,    39,    71,    19,   -91,   -87,   -52,    10,    58,
             27,     0,    10,    -1,   -75,   -69,    21,     0,    12,
             -7,    18,    26,   -14,   -25,   -10,    49,    23,    -9,
              0,    23,    54,    16,    24,    55,    21,   -38,   -31,
             14,    47,    64,     9,   -60,   -58,    -5,    -1,    19,
             32,    15,    25,     9,    -5,   -44,   -15,     0,     8,
             29,   -39,   -55,   -29,    43,     2,   -14,    42,    -3,
             -9,   -44,    -2,    53,    12,     5,   -21,    31,    31,
              0,   -14,    13,    56,   -27,    14,    41,    53,     7,
            -40,    23,   -31,   -18,    28,    35,    31,     4,    11,
            -29,     0,    24,     4]], dtype=int16),
  'columns': ['channel_0'],
  'metadata': {'segment_uuid': '25e4efd8-34c9-4be6-a825-73c4e7f13657',
   'Labels': 'key_io',
   'SegmentID': 18}},
 {'data': array([[  16,   55,   54,  -36,  -18,   45,   48,   42,   19,  -16,    0,
            44,   55,  -12,  -12,   61,   48,   30,   16,   18,   12,  -58,
            -8,   63,   68,   11,   18,   19,  -38,   -5,  -29,  -17,   51,
            93,   59,  -19,  -42,  -48,  -15,   -3,   33,   78,   47,   29,
            30,   -8,  -32,    0,   53,   68,   51,   26,   20,   19,  -21,
           -38,   35,   68,    5,   -8,    9,    3,  -20,  -20,   10,   25,
             0,    5,   -1,   -9,  -12,  -33,    0,   49,   49,  -18,  -47,
           -14,   24,   21,  -27,  -22,    6,   18,   14,    1,  -14,  -32,
            -5,   12,   16,  -13,  -50,  -32,    2,   -6,  -14,  -25,  -20,
             4,  -24,  -50,  -34,   10,   14,   -9,   -5,    2,    6,  -12,
           -25,    0,   46,   33,  -33,  -30,    6,    5,  -42,  -20,   47,
            52,   29,  -41,  -61,   10,   22,  -22,  -15,   26,    2,   -5,
            -8,  -66,  -55,   -6,   20,   -1,  -43,  -39,    2,   -6,  -64,
           -58,   -7,   64,  138,    8, -182, -188,  -97,   15,   99,  131,
           144,   99,  -82, -232, -248, -125,   92,  274,  265,   87, -166,
          -262, -261, -201,   66,  227,  206,   52,  -13, -117, -164, -140,
           -47,   58,  102,  135,  111,   -2, -167,  -84,  -56,  -28,    4,
           172,  139,   48,   -1,  -75, -186,  -54,   76,   37,  234,    4,
          -127, -123,   20,  -88,  -45,    3,   31,   72,   63, -128,  -76,
            -3,    8,  -86,  132,  143,  -85,  -43, -186, -119,  -73,  173,
           -52,  131,  -35,  -81,  -88,  111, -117,   80,  -12,   28,  -84,
            23,  -66,  -26,   36,  -85,   31,   45,  -54, -101,   89,  144,
           -11,  -98,   14,  -43,  -94,  -57,  -60,   48,  199,  -76, -160,
            64,   47, -237,   31,   94, -103,   34,  151,  -85,  -88,  142,
            12, -236,   81,  224,   22, -151,    4,   17,   -3,  -21,   -1,
            48,  102,  -16,  -64,   22,   64,   -1,   53,   56, -126,  -29,
            82,   -1,  -70,  116,   51,   89,  184,   -9, -371, -433,  247,
           781,  624, -732, -589,  386, -196, -236,  441,  448,   64, -797,
           130,  402,   90, -396,    0,  -25,   77,  113,  210,   52, -151,
          -368,   11,   61,  -45,  178,  183,   23, -231,   17,  -41,   14,
          -172,   35,  233,  235, -230, -175,  -46,  124,  -51, -122,  132,
           118,  -30,  -52,   50,   -1,  -30,   28,  -37,   24,  134,  129,
           -67, -161, -114,  -10,   19,   94,  133,  173,  -28, -198, -179,
            34,  157,   47,   92,   22,  -62,  -97,  -14,  -12,  -26,   72,
           127,   12,  -88,   63,   47,  -83,  -61,    1,  136,  106,  -17,
            14,   -2,  -90,  -90,   87,   15,   50,   58,   23,   47,   83,
           -57, -231,  -20,   -8]], dtype=int16),
  'columns': ['channel_0'],
  'metadata': {'segment_uuid': '25e4efd8-34c9-4be6-a825-73c4e7f13657',
   'Labels': 'key_io',
   'SegmentID': 19}}]
# fmt: on


def test_generate_features():
    class MockTransform(object):
        def __init__(
            self, uuid, name="", subtype="", input_contract=None, output_contract=None
        ):
            self.uuid = uuid
            self.name = name
            self.subtype = subtype
            self.input_contract = input_contract
            self.output_contract = output_contract

    transform = MockTransform(
        uuid="e3b0f26c-0508-4a0d-8cab-c706d72bcd97",
        name="MFCC",
        subtype="frequency",
        input_contract=fg_frequency_mfcc_contracts["input_contract"],
        output_contract=fg_frequency_mfcc_contracts["output_contract"],
    )
    generator_call = fg_frequency_mfcc

    generator_list = [
        (
            [
                generator_call,
                {
                    "columns": ["channel_0"],
                    "sample_rate": 16000,
                    "cepstra_count": 20,
                    "group_columns": ["Labels", "SegmentID", "segment_uuid"],
                },
            ],
            transform,
        )
    ]

    res = generate_features(
        "test_pipeline",
        input_data,
        generator_list,
        errors=[],
        calc_features=True,
        outputs=None,
    )

    assert res[0].shape[0] == len(input_data)
    assert res[0].shape[1] == 23


@pytest.mark.django_db
def test_segment_caller():
    Transform.objects.create(
        uuid="e3b0f26c-0508-4a0d-8cab-c706d72bcd97",
        name="General Threshold Segmentation",
        subtype="segmenter",
        input_contract=general_threshold_contracts["input_contract"],
        output_contract=general_threshold_contracts["output_contract"],
        core=True,
        path="core_functions/segmenters/sg_general_threshold.py",
        function_in_file="general_threshold",
    )

    step = {
        "inputs": {
            "max_segment_length": 100,
            "min_segment_length": 50,
            "first_vt_threshold": 0.171687,
            "second_vt_threshold": 0,
            "first_comparison": "max",
            "second_comparison": "min",
            "first_threshold_space": "std",
            "second_threshold_space": "std",
            "threshold_space_width": 10,
            "return_segment_index": True,
            "keep_partial_segment": True,
            "group_columns": ["Subject"],
            "first_column_of_interest": "AccelerometerX",
            "second_column_of_interest": "AccelerometerX",
        },
        "name": "General Threshold Segmentation",
        "outputs": ["temp.General_Threshold_Segmentation"],
        "type": "segmenter",
    }

    res = segment_function_caller(
        build_test_data(np.arange(150), tau=100, df=True),
        step,
        "test team",
        "test project",
        "test pipeline",
        "test user",
        "test task",
    )

    assert res == ([[100, 149]], None)
